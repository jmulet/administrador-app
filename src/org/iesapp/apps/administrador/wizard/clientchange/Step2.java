/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesapp.apps.administrador.wizard.clientchange;

import java.io.File;
import java.lang.annotation.Annotation;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.iesapp.apps.administrador.Cfg;
import org.iesapp.framework.util.CoreCfg;
import org.iesapp.util.StringUtils;
import org.iesapp.util.Version;

 

/**
 *
 * @author Josep
 */
public class Step2 extends javax.swing.JPanel {
    private final Cfg cfg;
  
    /**
     * Creates new form StartupStep3
     */
    public Step2(final Cfg cfg) {
        this.cfg = cfg;
        initComponents();
         
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("Suitable clients found");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jLabel2.setText("Client .jar files must be located within /modules dir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private static javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   //We must retrieve clientType from Step1
   public void updateComponents()
   {
        try {
            ArrayList<String> lookupForClass = lookupForClass(Step1.getLookupClassName());
            DefaultListModel model1 = new DefaultListModel();
            for(String s: lookupForClass)
            {
                model1.addElement(s);
            }
            jList1.setModel(model1);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Step2.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   private ArrayList<String> lookupForClass(String className) throws MalformedURLException
   {
       ArrayList<String> result = new ArrayList<String>();   
       File[] files = new File(CoreCfg.contextRoot+File.separator+"modules").listFiles();
       URL url0 = new File(CoreCfg.contextRoot+File.separator+"libs").toURI().toURL();
       for(File file: files)
       {
           if(!file.isFile() || !file.getAbsolutePath().endsWith(".jar"))
           {
               continue;
           }
           
           try {
               // Convert File to a URL
               URL url = file.toURI().toURL();    
               URL[] urls = new URL[]{url, url0};

               // Create a new class loader with the directory
               ClassLoader loader = new URLClassLoader(urls, null);

               // Load in the class; Class.childclass should be located in
               // the directory file:/c:/class/user/information
              // System.out.println("in loader with urls "+urls+"  looking up for "+className);
               Class cls = loader.loadClass(className);
               if(cls!=null)
               {
                   System.out.println("FOUND!!!");
                   String version = "";
                  
                   //Try to get version by reading annotation
                   Annotation[] annotations = cls.getDeclaredAnnotations();
                   System.out.println(annotations.length);
                   for(Annotation annotation: annotations)
                   {
                   
                   System.out.println("Lookup for annotation "+annotation);
                   
                   if(annotation instanceof Version)
                   {
                       version = ((Version) annotation).version();
                       break;
                   }
                   
                   }
                   
                   
                   result.add(file.getName()+" ("+version+")");
                   
               }
           } catch (Exception e) { 
              // System.out.println(e);
           }
       }
       return result;
   }
   
   public static String getJarFileName()
   {
      String selection = (String) jList1.getSelectedValue();
      return StringUtils.BeforeFirst(selection, " (");
   }
}
