/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgFestiusjava
 *
 * Created on 04-may-2011, 16:48:13
 */

package org.iesapp.apps.administrador.actions;

import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.iesapp.apps.administrador.Cfg;
import org.iesapp.framework.table.*;
import org.iesapp.framework.util.CoreCfg;

/**
 *
 * @author Josep
 */
public class DlgFestius extends javar.JRDialog {
    private DefaultTableModel modelTable1;
    private final Cfg cfg;


    /** Creates new form DlgFaltesPrevistes */
    public DlgFestius(java.awt.Frame par, boolean modal, Cfg cfg) {
        super(par, modal);
        this.cfg = cfg;
        initComponents();
         jTable1.setIntercellSpacing( new java.awt.Dimension(2,2) );
         jTable1.setGridColor(java.awt.Color.gray);
         jTable1.setShowGrid(true);
       
 

        ResultSet rs1;
        String SQL1 = "SELECT * FROM "+ CoreCfg.prefix+ "festius order by desde asc";
        rs1 = cfg.getCoreCfg().getMysql().getResultSet(SQL1);
        try {

            while (rs1!=null && rs1.next()) {
                int id = rs1.getInt("id");
                java.sql.Date desde = rs1.getDate("desde");
                java.sql.Date fins = rs1.getDate("fins");
                String comment = rs1.getString("commentari");
   
                Calendar cal = Calendar.getInstance();

                CellTableState cts = new CellTableState( "", id, 0);
                modelTable1.insertRow(jTable1.getRowCount(), new Object[]
                            {cts, desde, fins, comment});
            }
            rs1.close();
        } catch (SQLException ex) {
            Logger.getLogger(DlgFestius.class.getName()).log(Level.SEVERE, null, ex);
        }


        jTable1.getModel().addTableModelListener( new TableModelListener()
              {
              public void tableChanged(TableModelEvent e)
               {

                    int mrow = e.getFirstRow();
                    int mcol = e.getColumn();
                    if((mcol == 1 || mcol==2) )
                    {
                          java.sql.Date from = (java.sql.Date) jTable1.getValueAt(mrow, 1);
                          java.sql.Date fins = (java.sql.Date) jTable1.getValueAt(mrow, 2);

                        java.util.Date date = Calendar.getInstance().getTime();
                        java.sql.Date avui = new java.sql.Date(date.getTime());

                        if(from.compareTo(avui)<=0)
                        {
                            JOptionPane.showMessageDialog(javar.JRDialog.getActiveFrame(),"Fila"+ (mrow+1)+": Periodes festius nomes es fan efectius si la data d'inici és a partir de demà.");
                        }

                   }
              }
      });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()
        {
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex==0)
                return false;   //Disallow the editing of any cell
                else
                return true;
            }
        }
        ;
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editor de festius");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        modelTable1 = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Des de dia", "Fins dia", "Comentaris",
            }
        );

        String[] icons = new String[] {
            "/org/iesapp/apps/administrador/icons/delete.gif"
        };

        jTable1.setModel(modelTable1);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getColumnModel().getColumn(0).setCellRenderer(new MyIconButtonRenderer(icons));
        jTable1.getColumnModel().getColumn(1).setCellEditor(new CellDateEditor());
        jTable1.getColumnModel().getColumn(2).setCellEditor(new CellDateEditor());
        jTable1.getColumnModel().getColumn(1).setCellRenderer(new CellDateRenderer());
        jTable1.getColumnModel().getColumn(2).setCellRenderer(new CellDateRenderer());

        jTable1.getColumnModel().getColumn(3).setCellRenderer(new TextAreaRenderer());
        jTable1.getColumnModel().getColumn(3).setCellEditor(new TextAreaEditor());

        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);

        jTable1.setRowHeight(32);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Períodes festius amb els dies d'inici i final inclosos");

        jLabel2.setText("Afegeix un nou període no lectiu");
        jPanel1.add(jLabel2);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/iesapp/apps/administrador/icons/insert.gif"))); // NOI18N
        jButton2.setText("Inserta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jPanel1.add(filler1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/iesapp/apps/administrador/icons/exit.gif"))); // NOI18N
        jButton1.setText("Aplica i Tanca");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //insereix a la taula i crea a la base de dades
    //Tanca i aplica
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(jTable1.isEditing()) {
            jTable1.editCellAt(0, 0);
        }

        for(int i=0; i<jTable1.getRowCount(); i++)
        {
             CellTableState cts = (CellTableState) jTable1.getValueAt(i, 0);
            int id = ( (Number) cts.getCode() ).intValue();
            java.sql.Date from = (java.sql.Date) jTable1.getValueAt(i, 1);
            java.sql.Date fins = (java.sql.Date) jTable1.getValueAt(i, 2);
            
            java.util.Date date = Calendar.getInstance().getTime();
            java.sql.Date avui = new java.sql.Date(date.getTime());
            java.sql.Date dema = new java.sql.Date(date.getTime());

//            if(from.compareTo(avui)<=0)
//            {
//                JOptionPane.showMessageDialog(this,"Fila"+ (i+1)+": La data d'inici ha d'ésser a partir de demà."
//                );
//                return;
//            }

            if(fins.before(from))
            {
                JOptionPane.showMessageDialog(this,"Fila"+ (i+1)+": La data d'inici supera a la d'acabament."
                );
                
                jTable1.setEditingColumn(2);
                jTable1.setEditingRow(i);

                return;
            }

            String comment = (String) jTable1.getValueAt(i, 3);
            String SQL1 = "UPDATE " + CoreCfg.prefix + "festius SET desde=?, fins=?, commentari=? "
                        +" WHERE id='"+id+"'";

            Object[] updatedValues = new Object[]{from, fins, comment};
            int nup = cfg.getCoreCfg().getMysql().preparedUpdate(SQL1, updatedValues);

        }

        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    //Click
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       int mcol = jTable1.getSelectedColumn();
       int mrow = jTable1.getSelectedRow();



       if(evt.getClickCount()==1 && mcol==0)
       {
           int conf = JOptionPane.showConfirmDialog(javar.JRDialog.getActiveFrame(), "Voleu eliminar aquesta entrada de la base de dades?", "Confirmacio",
                                      JOptionPane.YES_NO_OPTION);
           if (conf!=0) {
                return;
            }

           CellTableState cts = (CellTableState) jTable1.getValueAt(mrow, 0);
           int id = ( (Number) cts.getCode() ).intValue();
         
           String SQL1 = "DELETE FROM "+CoreCfg.prefix+"festius where id='"+id+"'";
           //System.out.println(SQL1);
           int nup = cfg.getCoreCfg().getMysql().executeUpdate(SQL1);
           modelTable1.removeRow(mrow);
       }
    }//GEN-LAST:event_jTable1MouseClicked

    //add new date
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

            
            String SQL0 = "SELECT MAX(id) from " + CoreCfg.prefix +"festius";
            ResultSet rs1 = cfg.getCoreCfg().getMysql().getResultSet(SQL0);
            int maxid = 0;
            try {
            if (rs1 != null && rs1.next()) {
            }
                maxid = rs1.getInt("max(id)");
            } catch (SQLException ex) {
            Logger.getLogger(DlgFestius.class.getName()).log(Level.SEVERE, null, ex);
            }
            maxid +=1;

            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DAY_OF_MONTH, 1);
            java.sql.Date dema = new java.sql.Date(cal.getTime().getTime());
            CellTableState cts = new CellTableState( "", maxid, 0);
            modelTable1.insertRow(0, new Object[]{cts, dema, dema, ""});

            String SQL1 = "INSERT INTO "+ CoreCfg.prefix + "festius (id, desde, fins, commentari) "
                    + " VALUES(?, ?, ?, ?)";

            Object[] updatedValues = new Object[]{maxid, dema, dema, new String()};

            int nup = cfg.getCoreCfg().getMysql().preparedUpdate(SQL1, updatedValues);


    }//GEN-LAST:event_jButton2ActionPerformed

    @Override
    protected JRootPane createRootPane() {
    JRootPane rootPane2 = new JRootPane();
    KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
    AbstractAction actionListener = new AbstractAction() {
      public void actionPerformed(ActionEvent actionEvent) {
        setVisible(false);
      }
    } ;
    InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    inputMap.put(stroke, "ESCAPE");
    rootPane2.getActionMap().put("ESCAPE", actionListener);

    return rootPane2;
  }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
   
}

